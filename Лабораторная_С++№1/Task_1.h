#pragma once
#include <cstdio>

	using namespace std;

	/*Написать программу обработки одномерного массива с n элементами, в соответствии с
		вариантом(приложение А).Необходимые действия должны производиться в
		функции processArray(), возвращающей определенное значение и формирующей
		еще один(выходной) массив данных(см.свой вариант).Память под массивы
		выделять статически(объявлять массивы локально в функции main) и для доступа к
		элементам использовать индексы.Ввод - вывод данных организовать средствами cstdio.*/
	//8 вариант

	//Объявить массив из n = 15 целых чисел, проинициализируйте нулями.Функция
	//	processArray() должна заполнить массив членами арифметической прогрессии с
	//	начальным элементом a1 и шагом d(ввести с клавиатуры), подсчитать и вернуть cnt –
	//	количество всех двузначных элементов массива, а также сформировать выходной
	//	массив, который содержит все элементы исходного, кроме тех, сумма цифр которых
	//	равна 10. Вывести на экран массивы.



	 int processArray(int arr1[], size_t N, int arr2[]) {

		int a1, d;

		printf("Введите первый член арифметической прогрессии: ");
		scanf_s("%d", &a1);
		printf("Введите шаг прогрессии: ");
		scanf_s("%d", &d);
		printf("\n");
		arr1[0] = a1;

		for (size_t i = 1; i < N; i++) {
			arr1[i] = arr1[i - 1] + d;
		}

		int cnt = 0;
		int summ = 0;
		int n = 0;
		size_t count = 0;
		for (size_t i = 0; i < N; i++) {
			if (arr1[i] >= 10 && arr1[i] < 100) {
				cnt++;
			}
			summ = 0;
			n = arr1[i];
			while (n != 0) {
				summ += n % 10;
				n /= 10;
			}
			if (summ != 10) {
				arr2[count] = arr1[i];
				count++;
			}
		}
		return cnt;
	}

	 void printArray(int arr[], size_t N) {
		for (size_t i = 0; i < N; i++) {
			printf("%4d", arr[i]);
		}

		printf("\n");
	}

	 void Task1() {

		 const size_t N = 15;
		 int arr1[N] = { 0 };
		 int arr2[N] = { 0 };

		 int cnt = processArray(arr1, N, arr2);

		 printf("Количество двухзначных чисел = %d", cnt);
		 printf("\n");

		 printArray(arr1, N);
		 printf("\n");
		 printArray(arr2, N);

	 }

